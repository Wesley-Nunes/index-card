{
  "openapi": "3.0.0",
  "info": {
    "title": "Index Card",
    "description": "This is the API for the index card project.\n\nYou can access the app at [index-card.vercel](https://index-card.vercel.app)\n\n\n**Endpoint relation:**\n\nA user can have zero or more realities. The reality only exists if it is related to a user.\n\nA Reality can have zero or more timelines. The timeline only exists if it is related to a reality.\n\nA timeline can have zero or more index cards. The index card only exists if it is related to a timeline.",
    "contact": {
      "email": "wesnmonteiro@gmail.com"
    },
    "version": "0.1.0"
  },
  "externalDocs": {
    "description": "Find out more about Index card",
    "url": "https://github.com/Wesley-Nunes/index-card"
  },
  "servers": [
    {
      "url": "https://index-card.vercel.app/api"
    }
  ],
  "components": {
    "schemas": {
      "IndexCard": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The ID of the index card.",
            "example": 1
          },
          "position": {
            "type": "integer",
            "description": "The position of the index card within the timeline.",
            "example": 1
          },
          "sceneHeading": {
            "type": "string",
            "nullable": true,
            "description": "The scene heading of the index card.",
            "example": ""
          },
          "synopsis": {
            "type": "string",
            "nullable": true,
            "description": "The synopsis of the index card.",
            "example": ""
          },
          "conflict": {
            "type": "string",
            "nullable": true,
            "description": "The conflict of the index card.",
            "example": ""
          },
          "timelineId": {
            "type": "integer",
            "format": "int32",
            "description": "The ID of the timeline this index card belongs to.",
            "example": 1
          }
        }
      }
    },
    "securitySchemes": {
      "indexcard_auth": {
        "type": "oauth2",
        "description": "This API uses github OAuth 2.",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "",
            "tokenUrl": "",
            "scopes": {
              "readRealities": "read your realities",
              "readTimelines": "read your timelines",
              "readIndexcards": "read your index cards",
              "writeIndexcards": "update your index cards",
              "createIndexcard": "create a new index card"
            }
          }
        }
      }
    }
  },
  "paths": {
    "/indexcards/{id}": {
      "summary": "Update an index card for a given timeline.",
      "patch": {
        "description": "Updates an index card for a given timeline.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the index card.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "The updated index card object.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IndexCard"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IndexCard"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed or user is not authorized to access this resource."
          },
          "404": {
            "description": "The requested resource was not found."
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "security": [
          {
            "indexcard_auth": [
              "writeIndexcards"
            ]
          }
        ]
      }
    },
    "/indexcards": {
      "summary": "Represents a group of index cards of timelines.",
      "get": {
        "summary": "Retrieve index cards for a given timeline.",
        "description": "Returns all index cards for a given timeline, sorted by position.",
        "parameters": [
          {
            "name": "realityId",
            "in": "query",
            "description": "The ID of the reality.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "timelineId",
            "in": "query",
            "description": "The ID of the timeline.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IndexCard"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed or user is not authorized to access this resource."
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "security": [
          {
            "indexcard_auth": [
              "readIndexcards"
            ]
          }
        ]
      },
      "post": {
        "summary": "Create a new index card.",
        "description": "Create a new index card at given position of the current timeline.",
        "parameters": [
          {
            "name": "realityId",
            "in": "query",
            "description": "The ID of the reality.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "timelineId",
            "in": "query",
            "description": "The ID of the timeline.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "The position to create the new index card.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "position": {
                    "type": "integer",
                    "description": "The position of the index card within the timeline.",
                    "example": 1
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IndexCard"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed or user is not authorized to access this resource."
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "security": [
          {
            "indexcard_auth": [
              "createIndexcard"
            ]
          }
        ]
      }
    },
    "/timelines": {
      "summary": "Represents a group of timelines of reality.",
      "get": {
        "summary": "Return all timelines of one reality.",
        "parameters": [
          {
            "name": "realityTitle",
            "in": "query",
            "description": "The title of the reality",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The id of the timeline",
                        "example": 1
                      },
                      "title": {
                        "type": "string",
                        "description": "The title of the timeline",
                        "example": "Stable timeline"
                      },
                      "description": {
                        "type": "string",
                        "description": "The description of the timeline",
                        "example": "The stable timeline is the baseline of the story"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization information is missing or invalid."
          },
          "5XX": {
            "description": "Unexpected error."
          }
        },
        "security": [
          {
            "indexcard_auth": [
              "readTimelines"
            ]
          }
        ]
      }
    },
    "/realities": {
      "get": {
        "summary": "Return all realities of the authenticated user.",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The id of the reality",
                        "example": 1
                      },
                      "title": {
                        "type": "string",
                        "description": "The title of the reality",
                        "example": "Reality base"
                      },
                      "description": {
                        "type": "string",
                        "description": "The description of the reality",
                        "example": "The reality base is the starting point of the universe"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization information is missing or invalid."
          },
          "5XX": {
            "description": "Unexpected error."
          }
        },
        "security": [
          {
            "indexcard_auth": [
              "readRealities"
            ]
          }
        ]
      }
    }
  },
  "tags": []
}